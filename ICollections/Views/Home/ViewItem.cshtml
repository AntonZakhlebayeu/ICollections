@using Microsoft.EntityFrameworkCore
@model ICollections.Models.Item
@using ICollections.Data.Interfaces

@functions 
{
    
    string GetTheUserId(string userId)
    {
        var data = ViewBag.userData as IUserRepository;

        var userEmail = data!.FindAsync(userId).Result!.Email;

        return userEmail;
    }

    string GetUserRole()
    {
        if (!User.Identity!.IsAuthenticated) return "user";
        
        var data = ViewBag.userData as IUserRepository;

        var userRole = data!.GetSingleAsync(u => u.Email == User.Identity!.Name).Result!.Role;

        return userRole!;
    }

    string GetAuthorId(int collectionId)
    {
        var data = ViewBag.collectionData as ICollectionRepository;

        var authorId = data!.FindAsync(collectionId).Result!.AuthorId;

        return authorId!;
    }
}

@{
    var collectionData = ViewBag.collectionData as ICollectionRepository;
    var userData = ViewBag.userData as IUserRepository;

    var currentUser = userData!.GetSingleAsync(u => u.UserName == User!.Identity!.Name).Result;

    var currentCollection = collectionData!.FindAsync(Model.CollectionId).Result;
}

<link rel="stylesheet" title="theme" href="#">
<link rel="stylesheet" type="text/css" href="~/css/CreateCollection/CreateCollection.css"/>
<link rel="stylesheet" type="text/css" href="~/css/Collections/Collection.css"/>

@if (Model.FileName != "")
{
    <div style="margin-bottom: 12px" align="center">
        <img src="https://nikminerstorage.blob.core.windows.net/images/@(Model.FileName)" width="640px" height="360px" alt="User Photo">
    </div>   
}

<div id="text" style="margin-bottom: 12px">
    <h2 class="lng-CollectionTitle">Title:</h2>
    <h3>@Model.Title</h3>
</div>

<div id="footer-text" style="margin-bottom: 12px">
    <h3 class="lng-CollectionSmallDescription">Description:</h3>
    <h4>@Model.Description</h4>
</div>

<div id="footer-text" style="margin-bottom: 12px">
    <h2 class="lng-ParentCollection">Collection:</h2>
    <ul>
        <li>
            <a href="/Home/ViewCollection/@Model.CollectionId">@collectionData!.FindAsync(Model.CollectionId).Result!.Title</a>
        </li>
    </ul>
</div>

<div id="footer-text" style="margin-bottom: 12px">
    <h2 class="lng-Likes">Likes:</h2>
    <h3 id="LikeValue">@Model.Likes.Count</h3>
</div>

<div style="margin-bottom: 12px" id="text">
    @if (currentCollection!.AddDates == "true")
    {
        var itemClassNameDate = "lng-" + currentCollection.Theme + "ItemDate";
        <h2 class="@itemClassNameDate">Date:</h2>
        <h3>@Model.Date</h3>
    }
</div>

<div style="margin-bottom: 12px" id="text">
    @if (currentCollection!.AddBrands == "true")
    {
        var itemClassNameDate = "lng-" + currentCollection.Theme + "ItemBrand";
        <h2 class="@itemClassNameDate">Brand:</h2>
        <h3>@Model.Brand</h3>
    }
</div>

@if (User!.Identity!.IsAuthenticated)
{
    <div id="LikeArea" align="right" style="margin-bottom: 12px">
        <form method="post" action="/Home/@Model.CollectionId/@Model.Id/ToggleLike" onsubmit="GetAmountOfLikes()">
            <button id="LikeButton" for="LikeButton" class="btn btn-outline-danger">Like!</button>
        </form>
    </div>
}

<div align="right" style="margin-bottom: 12px">
    <h5 id="footer-text"><i>@Model.LastEditDate</i></h5>
</div>

@if (GetTheUserId(GetAuthorId(Model.CollectionId)) == User.Identity!.Name || GetUserRole() != "user")
{
    <form action="/Home/EditItem/@Model.CollectionId/@Model.Id">
        <div align="right" style="margin-bottom: 20px">
            <button class="lng-Edit btn btn-lg btn-outline-primary btn-block">Edit</button>
        </div>
    </form>
    
    <form action="/Home/ViewItem/@Model.CollectionId/@Model.Id/DeleteItem">
        <div align="right">
            <button class="lng-Delete btn btn-lg btn-outline-danger btn-block">Delete</button>
        </div>
    </form>
}

<script src="/js/ChangeLanguage.js"></script>
<script src="/js/ChangeTheme.js"></script>

<script>
    let pageTitle = (getCurrentLanguage() === 'en') ? 'View Item - ICollections' : 'Просмотр предмета - ICollections';
         
    document.querySelector('title').innerHTML = pageTitle;
</script>

<script src="https://code.jquery.com/jquery-3.1.1.min.js"></script>
<script>  
function GetAmountOfLikes() {
    setTimeout(() => { Get(); }, 500)
    function Get() {
    let url = "/Home/GetAmountOfLikes/@Model.Id"; 
    let $j = jQuery.noConflict();
    $.get(url, null, function (data) {
        $("#LikeValue").html(data);  
    });  
    }
}
</script>  