@model ICollections.Models.Collection;
@using ICollections.Services.Interfaces;
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using System.Web

@functions 
{
    string GetUserRole()
    {
        if (!User.Identity!.IsAuthenticated) 
            return "user";
        
        var data = ViewBag.userService as IUserService;

        var userRole = data!.GetUserByEmail(User!.Identity!.Name!).Result!.Role;

        return userRole!;
    }

    string GetTheUserId(string userId)
    {
        var data = ViewBag.userService as IUserService;
        
        var userEmail = data!.GetUserById(userId).Result!.Email;

        return userEmail;
    }


    static string GetContentPart(string content) 
    {
        const int contentPartSize = 35;

        if (content.Length <= contentPartSize) return content;
        
        content = content[..contentPartSize];
        content += "...";

        return content;
    }
}

<link rel="stylesheet" title="theme" href="#">
<link rel="stylesheet" type="text/css" href="~/css/CreateCollection/CreateCollection.css"/>
<link rel="stylesheet" type="text/css" href="~/css/Collections/Collection.css"/>

<script src="https://unpkg.com/showdown/dist/showdown.min.js"></script>
<script>
    var md, context;

    function GetConvertedString(md, context) {
        let converter = new showdown.Converter();
        let html = converter.makeHtml(md);
        
        document.getElementById(context).insertAdjacentHTML("afterend", html);
    }                  
</script>

@if (Model.FileName != "")
{
    <div style="margin-bottom: 12px" align="center">
        <img src="https://nikminerstorage.blob.core.windows.net/images/@(Model.FileName)" width="640px" height="360px" alt="User Photo">
    </div>   
}

<div class="col-md-100 theme-main-text">
    <h2 class="lng-CollectionTitle">Title:</h2>
    <h3>@Model.Title</h3>
</div>

<div class="col-md-auto theme-other-text">
    <h3 class="lng-CollectionSmallDescription">Description:</h3>
    <div id="description"></div>
</div>

<div class="col-md-auto theme-other-text">
    <h4 class="lng-CollectionTheme">Theme:</h4>
    <h5>@Model.Theme</h5>
</div>

<div align="right" style="margin-bottom: 24px">
    <h5 class="theme-other-text"><i>@Model.LastEditDate</i></h5>
</div>

@if (GetTheUserId(Model.AuthorId!) == User.Identity!.Name || GetUserRole() != "user")
{
    <form action="/Home/EditCollection/@Model.Id">
        <div align="right" style="margin-bottom: 20px">
            <button class="lng-Edit btn btn-lg btn-outline-primary btn-block">Edit</button>
        </div>
    </form>
    
    <form action="/Home/ViewItem/@Model.Id/DeleteCollection" style="margin-bottom: 36px">
        <div align="right">
            <button class="lng-Delete btn btn-lg btn-outline-danger btn-block">Delete</button>
        </div>
    </form>
}


@switch (Model.CollectionItems!.Any())
{
    case false when (GetTheUserId(Model.AuthorId!) == User.Identity!.Name || GetUserRole() != "user"):
        <div class="text-center col-md-auto">
            <h3 class="lng-CollectionEmpty theme-main-text"><b>Your collection is empty, expand it by adding new item in collection.</b></h3>
        </div>
        break;
    case false when GetTheUserId(Model.AuthorId!) != User.Identity!.Name:
        <div class="text-center col-md-auto">
            <h3 class="lng-CollectionEmptyNotUser theme-main-text"><b>This is collection is empty, author will expand id by adding new items.</b></h3>
        </div>
        break;
    default:
    {
        <div class="row row-cols-1 row-cols-md-3 g-4 theme-main-text">
            @foreach (var item in Model.CollectionItems!.ToList().OrderByDescending(n => n.Id))
            {
                <div class="col">
                    <div class="card h-100">
                        @if (item.FileName != "")
                        {
                            @:<img style="display: block; margin: 0 auto" src="https://nikminerstorage.blob.core.windows.net/images/@item.FileName" class="rounded-start" alt="Collection photo" width="140px" height="80px">
                        }
                        <div class="card-body">
                            <h5 class="card-title"><a class="link" href="/Home/ViewItem/@item.CollectionId/@item.Id">@item.Title</a></h5>
                            @{
                                var itemId = "description" + item.Id;
                            } 
                            <div id=@itemId></div>
                            <script>
                            md = "@Html.Raw(HttpUtility.JavaScriptStringEncode(GetContentPart(item.Description!)))";
                            context = "@Html.Raw(HttpUtility.JavaScriptStringEncode(GetContentPart(itemId)))";
                            
                            GetConvertedString(md,  context);
                        </script>
                        </div>
                        <div class="card-footer">
                            <p class="card-text text-muted">@item.LastEditDate</p>
                        </div>
                    </div>
                </div>
            }
        </div>
        break;
    }
}

<br/>

@if (GetTheUserId(Model.AuthorId!) == User.Identity!.Name || GetUserRole() != "user")
{
    <form action="/Home/AddItem/@Model.Id">
        <div class="text-center">
            <button class="lng-AddItemButton btn btn-lg btn-outline-success btn-block">Add Item</button>
        </div>
    </form>
}

<script src="/js/ChangeLanguage.js"></script>
<script src="/js/ChangeTheme.js"></script>

<script>
    let pageTitle = (getCurrentLanguage() === 'en') ? 'View Collection - ICollections' : 'Просмотр коллекции - ICollections';
         
    document.querySelector('title').innerHTML = pageTitle;
</script>

<script>
    function GetConvertedString() {
        let converter = new showdown.Converter();
        let md = "@Html.Raw(HttpUtility.JavaScriptStringEncode(@Model.Description))";
        let html = converter.makeHtml(md);
        
        document.getElementById("description").insertAdjacentHTML("afterend", html);
    }

GetConvertedString();
</script>